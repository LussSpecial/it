/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-21 12:55:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.queen;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ggul.zip.faq.FaqVO;
import java.util.*;
import java.util.Date;

public final class adminFaqList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/queen/../queen/adminNavbar.jsp", Long.valueOf(1684668360000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1683079470908L));
    _jspx_dependants.put("jar:file:/C:/swork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/honeytiper/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.ggul.zip.faq.FaqVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<!-- <title>Insert title here</title> -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/adminNavbar.css\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"menu-bar\">\r\n");
      out.write("<a href=\"index\" style=\"margin:0px 20px;\"><img onerror=\"this.src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/default.png'\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/LOGOy.png\" style=\"width:140px; hight: auto;\" title=\"꿀TIP 홈페이지로가기\"></a>\r\n");
      out.write("<p class=\"p\"style=\"margin-bottom:40px;\">관리자님 반갑습니다</p>\r\n");
      out.write("<h3 class=\"h3\"><a style=\"font-size:18.72px; font-weight:bold;\" href=\"goChart\">메인으로가기</a></h3>\r\n");
      out.write("  <a href=\"listuser\">회원리스트</a>\r\n");
      out.write("  <a href=\"listlesson\">강의리스트</a>\r\n");
      out.write("  <a href=\"getReportList\">블랙리스트관리</a>\r\n");
      out.write("  <a href=\"getPotentialTiperList\">승급요청처리</a>\r\n");
      out.write("  <a href=\"adminNoticeList\">공지사항 관리</a>\r\n");
      out.write("  <a href=\"adminFaqList\">F A Q 관리</a>\r\n");
      out.write("  <a href=\"callEscrowList\">에스크로내역</a>\r\n");
      out.write("  <a href=\"getDisputeResolutionList\">강의완료 및 취소</a>\r\n");
      out.write("  <a href=\"adminChkBtn\">관리자정보수정</a>\r\n");
      out.write("  <a class=\"p\" href=\"logOut\"style=\"font-weight:bold;font-size:18px;\">관리자 로그아웃</a>\r\n");
      out.write("<div class=\"menu-icon\">\r\n");
      out.write("    <i class=\"fa fa-angle-right\"></i>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write(" <script>\r\n");
      out.write(" const menuBar = document.querySelector('.menu-bar');\r\n");
      out.write(" const subMenus = document.querySelectorAll('.sub-menu');\r\n");
      out.write(" const menuIcon = document.querySelector('.menu-icon');\r\n");
      out.write("\r\n");
      out.write(" menuBar.addEventListener('mouseover', () => {\r\n");
      out.write("   menuBar.classList.add('active');\r\n");
      out.write("   subMenus.forEach(subMenu => subMenu.style.display = 'block');\r\n");
      out.write("   menuIcon.style.display = 'none';\r\n");
      out.write(" });\r\n");
      out.write("\r\n");
      out.write(" menuBar.addEventListener('mouseout', () => {\r\n");
      out.write("   menuBar.classList.remove('active');\r\n");
      out.write("   subMenus.forEach(subMenu => subMenu.style.display = 'none');\r\n");
      out.write("   if (!menuBar.classList.contains('active')) {\r\n");
      out.write("     menuIcon.style.display = 'block';\r\n");
      out.write("   }\r\n");
      out.write(" });\r\n");
      out.write("</script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>꿀TIPer 관리자 - FAQ 관리</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("<!-- <link rel=\"stylesheet\" -->\r\n");
      out.write("<!-- 	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"> -->\r\n");

Date today = new Date();
String formattedDate = String.format("%tF", today);

if(request.getParameter("update")!=null){
	out.print("<script>");
	out.print("alert('수정이 완료되었습니다.');");
	out.print("</script>");
}




      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/adminFaqList.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//전역변수정의\r\n");
      out.write("var totalData; //총 데이터 수\r\n");
      out.write("var dataPerPage=10; //한 페이지에 나타낼 글 수\r\n");
      out.write("var pageCount = 5; //페이징에 나타낼 페이지 수\r\n");
      out.write("var globalCurrentPage= 1; //현재 페이지\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ID(name) start-date(notice_start) end-date(notice_end) notice-search(notice_search)\r\n");
      out.write("var search = $(\"#faq-search\").val();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function selTdUpdate(val){\r\n");
      out.write("updateBtn = window.open('adminFaqUpdate?faq_question_num='+val, \"_blank\", \"width=850px, height=800px, resizeable\");\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selTdDelete(val){\r\n");
      out.write("	\r\n");
      out.write("	if(confirm(\"정말 삭제하시겠습니까?\")){\r\n");
      out.write("		location.href=\"deleteFaq?faq_question_num=\"+val\r\n");
      out.write("	}else{\r\n");
      out.write("		alert(\"삭제 취소하였습니다.\");\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// 검색 버튼 클릭 이벤트\r\n");
      out.write("function btnSFnc() {\r\n");
      out.write("	search = $(\"#faq-search\").val();\r\n");
      out.write("    ajaxFnc();\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("// 전체보기 버튼 클릭 이벤트\r\n");
      out.write("function viewAllFnc() {\r\n");
      out.write("	$(\"#faq-search\").val(\"\");\r\n");
      out.write("    btnSFnc();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 아약스 함수\r\n");
      out.write("function ajaxFnc() {\r\n");
      out.write("	search;\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        method: \"POST\",\r\n");
      out.write("        url: 'adminFaqList',\r\n");
      out.write("        data:{\r\n");
      out.write("        	'faq_search' : search\r\n");
      out.write("        },\r\n");
      out.write("        success: function (res) {\r\n");
      out.write("            totalData = res.length;\r\n");
      out.write("            displayData(globalCurrentPage, dataPerPage, res);\r\n");
      out.write("            paging(totalData, dataPerPage, pageCount, globalCurrentPage);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("  ajaxFnc();\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function displayData(currentPage, dataPerPage, dataList) {\r\n");
      out.write("\r\n");
      out.write("let chartHtml = \"\";	\r\n");
      out.write("\r\n");
      out.write("currentPage = Number(currentPage);\r\n");
      out.write("dataPerPage = Number(dataPerPage);\r\n");
      out.write("let startPage = (currentPage - 1) * dataPerPage; //15\r\n");
      out.write("let endPage = (currentPage - 1) * dataPerPage + dataPerPage;\r\n");
      out.write("if(endPage > (dataList.length)) endPage = dataList.length;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("for (var i = startPage; i < endPage; i++) {\r\n");
      out.write("	\r\n");
      out.write("	 chartHtml += \"<tr><td style='text-align:center;'>\"+(dataList[i].faq_question_num || \"\")+\r\n");
      out.write("	 \"</td><td title='\"+dataList[i].faq_question+\"' style='text-overflow:ellipsis; overflow:hidden; white-space:nowrap;'>\" +(dataList[i].faq_question || \"\") + \r\n");
      out.write("	 \"</td><td style='text-align:center;'><button id='updateBtn' type='button' onclick='selTdUpdate(\"+dataList[i].faq_question_num +\")'>수정</button>&nbsp;&nbsp;\"+\r\n");
      out.write("	 \"<button id='deleteBtn' type='button' onclick='selTdDelete(\"+dataList[i].faq_question_num +\")'> 삭제</button></td></tr>\";\r\n");
      out.write(" }\r\n");
      out.write(" \r\n");
      out.write("$(\"#dataTableBody\").html(chartHtml);\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//페이징함수\r\n");
      out.write("function paging(totalData, dataPerPage, pageCount, currentPage) {\r\n");
      out.write("totalPage = Math.ceil(totalData / dataPerPage); //총 페이지 수\r\n");
      out.write(" \r\n");
      out.write("if(totalPage<pageCount){\r\n");
      out.write("  pageCount=totalPage;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("let pageGroup = Math.ceil(currentPage / pageCount); // 페이지 그룹\r\n");
      out.write("let endPage = pageGroup * pageCount; //화면에 보여질 마지막 페이지 번호\r\n");
      out.write("\r\n");
      out.write("if (endPage > totalPage) {\r\n");
      out.write("  endPage = totalPage;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("let startPage = endPage - (pageCount - 1); //화면에 보여질 첫번째 페이지 번호\r\n");
      out.write("let next = Number(currentPage)+1;\r\n");
      out.write("let prev = Number(currentPage)-1;\r\n");
      out.write("\r\n");
      out.write("let pageHtml = \"\";\r\n");
      out.write("\r\n");
      out.write("if (prev > 0) {\r\n");
      out.write("  pageHtml += \"<li><a href='javascript:void(0)' id='prev'> 이전 </a></li>\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//페이징 번호 표시 \r\n");
      out.write("for (var i = startPage; i <= endPage; i++) {\r\n");
      out.write("	if (currentPage == i) {\r\n");
      out.write("	  pageHtml +=\r\n");
      out.write("	    '<li class=\"on\"><a href=\"javascript:void(0)\" id=\"' + i + '\">' + i + '</a></li>';\r\n");
      out.write("	} else {\r\n");
      out.write("	  pageHtml += \"<li><a href='javascript:void(0)' id='\" + i + \"'>\" + i + \"</a></li>\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("if (next <= totalPage) {\r\n");
      out.write("  pageHtml += '<li><a href=\"javascript:void(0);\" id=\"next\"> 다음 </a></li>';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(\"#pagingul\").html(pageHtml);\r\n");
      out.write("let displayCount = \"\";\r\n");
      out.write("displayCount = \"현재 1 - \" + totalPage + \" 페이지 / \" + totalData + \"건\";\r\n");
      out.write("$(\"#displayCount\").text(displayCount);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" //페이징 번호 클릭 이벤트 \r\n");
      out.write("$(\"#pagingul li a\").click(function () {\r\n");
      out.write("	let $id = $(this).attr(\"id\");\r\n");
      out.write("	selectedPage = $(this).text();\r\n");
      out.write("	\r\n");
      out.write("	if ($id == \"next\") selectedPage = next;\r\n");
      out.write("	if ($id == \"prev\") selectedPage = prev;\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//전역변수에 선택한 페이지 번호를 담는다...\r\n");
      out.write("	globalCurrentPage = selectedPage;\r\n");
      out.write("	ajaxFnc();\r\n");
      out.write("});\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("	function addFaq(){\r\n");
      out.write(" 		location.href=\"insertMoveFaq\";\r\n");
      out.write(" 	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h2 style=\"margin:40px 0px;\">F A Q 관리</h2>\r\n");
      out.write("<button id=\"view-all-button\" onclick=\"viewAllFnc()\">전체목록보기</button>\r\n");
      out.write("		<br>\r\n");
      out.write("<label for=\"faq-search\">제목검색</label>\r\n");
      out.write("<input type=\"text\" id=\"faq-search\" name=\"faq_search\" placeholder=\"검색하실 제목을 입력하세요.\">\r\n");
      out.write("<button id=\"search-button\"  style=\"outline:none; border:none; background:transparent;\" onclick=\"btnSFnc()\"><i class=\"fa fa-search\" style=\"font-size:24px; color:#FFD400;\"></i></button>\r\n");
      out.write("<button type=\"button\" onclick=\"addFaq()\" id=\"addFaq\">자주묻는질문등록하기</button>\r\n");
      out.write("				<br>\r\n");
      out.write("            <hr class=\"hrFirst\">\r\n");
      out.write("            <br>\r\n");
      out.write("            <span id=\"displayCount\"></span>\r\n");
      out.write("            <br>\r\n");
      out.write("            <table class=\"table table-bordered\" style=\"table-layout: fixed;\">\r\n");
      out.write("	            <thead>\r\n");
      out.write("	                <tr class=\"pagination-row\" >\r\n");
      out.write("	                    <th style=\"width:10%\">번호</th> \r\n");
      out.write("	                    <th style=\"width:60%\">질문</th>\r\n");
      out.write("	                    <th style=\"width:17%\" style=\"padding:5px;\">관리</th>\r\n");
      out.write("	                </tr>\r\n");
      out.write("	            </thead>\r\n");
      out.write("	            <tbody id=\"dataTableBody\" style=\"table-layout: fixed;\"></tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("	<ul id=\"pagingul\"></ul>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
